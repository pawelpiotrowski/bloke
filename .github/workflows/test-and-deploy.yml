# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test and Deploy
run-name: Running test and deploy
on:
  pull_request:
    branches: ['main']

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.14.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Test and build
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Trigger server update
        run: |
          echo "$AWS_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_USERNAME}@${AWS_HOSTNAME} '
            cd /opt/bitnami/projects/blokecms
            node ./scripts/update.js ${{ vars.STAGE_ABS_URL }}
          '
        env:
          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          AWS_HOSTNAME: ${{ secrets.AWS_HOSTNAME }}
          AWS_USERNAME: ${{ secrets.AWS_USERNAME }}
      - name: Setup and run e2e tests
        working-directory: ./e2e
        run: |
          npm ci
          npx playwright install --with-deps
          npx playwright install msedge
          npx playwright test --project=setup
          npx playwright test --grep-invert @setup
        env:
          E2E_BASE_URL: ${{ vars.STAGE_ABS_URL }}
          E2E_ADMIN_NAME: ${{ secrets.E2E_ADMIN_NAME }}
          E2E_ADMIN_PWD: ${{ secrets.E2E_ADMIN_PWD }}
          E2E_USER_NAME: ${{ secrets.E2E_USER_NAME }}
          E2E_USER_PWD: ${{ secrets.E2E_USER_PWD }}
